geom_label(outliars, mapping = aes(x = -2.6, y = -3, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_outliars
labeled_outliars <- hist +
geom_point(outliars, mapping = aes(x = .resid, y = 1), color = "#D7261E", shape = 13, size = 10) +
geom_label(outliars, mapping = aes(x = -3, y = 10, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_outliars
labeled_outliars <- hist +
geom_point(outliars, mapping = aes(x = .resid, y = 1), color = "#D7261E", shape = 13, size = 10) +
geom_label(outliars, mapping = aes(x = -3.5, y = 10, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_outliars
labeled_outliars <- hist +
geom_point(outliars, mapping = aes(x = .resid, y = 1), color = "#D7261E", shape = 13, size = 10) +
geom_label(outliars, mapping = aes(x = -3.5, y = 10, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_outliars
labeled_outliars <- hist +
geom_point(outliars, mapping = aes(x = .resid, y = 1), color = "#D7261E", shape = 13, size = 10) +
geom_label(outliars, mapping = aes(x = -3.3, y = 10, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_outliars
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3) +
labeled_qq
labeled_qq <- qq + geom_point(outliars, mapping = aes(x = -3, y = -3.9), color = "#D7261E", shape = 0, size = 15) +
geom_point(outliars, mapping = aes(x = -2.6, y = -2.7), color = "#D7261E", shape = 0, size = 15) +
geom_label(outliars, mapping = aes(x = -3, y = -3.5, label = "OUTLIARS"), color = "#D7261E", size = 3)
labeled_qq
blogdown:::insert_image_addin()
source(here::here("R", "regression.R"))
theme_set(theme_light(base_size = 30))
options(htmltools.dir.version = FALSE, echo = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.width = 12, fig.height = 8)
1:3
c(1:5, runif(round(5))
c(1:5, round(runif(5))
c(1:5, round(runif(5)))
cbind(1:5, round(runif(5)))
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t1
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1[3,2]
t2 <- median(t2[,2], na.rm = TRUE)
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
t2 <- median(t2[,2], na.rm = TRUE)
knitr::kable(list(t1, t2))
colnames(t1)
t1
colnames(t2) <- c("Obs. Number", "Data Point")
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
colnames(t1) <- c("Obs. Number", "Data Point")
t2[3,2] <- median(t2[,2], na.rm = TRUE)
colnames(t2) <- c("Obs. Number", "Data Point")
knitr::kable(list(t1, t2))
median(t2[,2], na.rm = TRUE)
median(t1[,2], na.rm = TRUE)
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
colnames(t1) <- c("Obs. Number", "Data Point")
t2[3,2] <- median(t1[,2], na.rm = TRUE)
colnames(t2) <- c("Obs. Number", "Data Point")
knitr::kable(list(t1, t2))
median(t1[,2], na.rm = TRUE)
set.seed(69)
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
colnames(t1) <- c("Obs. Number", "Data Point")
t2[3,2] <- median(t1[,2], na.rm = TRUE)
colnames(t2) <- c("Obs. Number", "Data Point")
median(t1[,2], na.rm = TRUE)
data
mutate(predict = predict(fit),
e = resid(fit))
source(here::here("R", "regression.R"))
fit_df5
mutate(predict = predict(fit_df5),
e = resid(fit_df5))
data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/40) + (1/41))
tstar <- (d1 - d2) / (s*sq)
qt(p = .975, 79)
c(d1, d2, s, tstar)
tstar
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
qt(p = .975, 79)
c(d1, d2, s, tstar)
tstar
nrow(upper)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
qt(p = .975, 79)
c(d1, d2, s, tstar)
d1
d1;d2
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
d1
d2 <- mean(abs(upper$e - median(upper$e)))
d2
nrow(df)
nrow(lower)
nrow(upper)
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
s
sq
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
sq
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
sq <- s / (nrow(df) - 2)
sq
s <- sqrt(sq)
s
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
c(d1, d2, s, tstar)
sq
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
sq
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
# c(d1, d2, s, tstar)
tstar
pt(.975, 648)
qt(0.975, 648)
qt(0.975, 643)
data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5))
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4)
arrange(predict)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
# c(d1, d2, s, tstar)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1
d2
d1
data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 5)
data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 5) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
nrow(lower)
nrow(upper)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
df <- data %>%
mutate(predict = predict(fit_df5),
e = resid(fit_df5)) %>%
filter(polrights_fh >= 4) %>%
arrange(predict)
lower <- df %>% filter(predict < quantile(predict, .5)) %>% arrange(predict)
upper <- df %>% filter(predict >= quantile(predict, .5)) %>% arrange(desc(predict))
d1 <- mean(abs(lower$e - median(lower$e)))
d2 <- mean(abs(upper$e - median(upper$e)))
s <- sum((abs(lower$e - median(lower$e)) - d1)^2) +
sum((abs(upper$e - median(upper$e)) - d2)^2)
sq <- s / (nrow(df) - 2)
s <- sqrt(sq)
sq <- sqrt((1/nrow(lower)) + (1/nrow(upper)))
tstar <- (d1 - d2) / (s*sq)
# qt(p = .975, 79)
c(d1, d2, s, tstar)
d1
d2
data %>%
group_by(polrights_fh) %>%
add_count(polrights_fh) %>%
ggplot() +
geom_bar(aes(x = polrights_fh, fill = factor(polrights_fh)), color = "black") +
geom_text(aes(x = polrights_fh, y = n, label = n), vjust = -.75) +
viridis::scale_fill_viridis(discrete = TRUE, direction = -1) +
scale_x_continuous(breaks = 1:7) +
theme_test(base_size = 30) +
theme(legend.position = "none")
data %>%
group_by(polrights_fh) %>%
add_count(polrights_fh) %>%
ggplot() +
geom_bar(aes(x = polrights_fh, fill = factor(polrights_fh)), color = "black") +
geom_text(aes(x = polrights_fh, y = n, label = n), vjust = -.75) +
viridis::scale_fill_viridis(discrete = TRUE, direction = -1) +
scale_x_continuous(breaks = 1:7) +
theme_test(base_size = 30) +
theme(legend.position = "none") +
labs(y = "Number", x = "Political Freedom", title = "Distribution of Political Freedom Within the OECD")
r <- subsets %>% group_by(df) %>% summarise(adj = max(adj.r.squared, na.rm = T))
subsets %>%
ggplot(aes(x = df, y = adj.r.squared)) +
geom_point() +
geom_smooth(data = r, aes(df, adj), se = FALSE, span = 0.5, color = "Green") +
labs(title = "", x = "Parameters", y = "Adjusted R Squared") +
scale_x_continuous(breaks = 1:9) +
theme_test(base_size = 30)
fit_df5 %>%
broom::augment() %>%
mutate(yhat = predict(fit_df5),
resid = resid(fit_df5)) %>%
ggplot() +
geom_point(aes(x = yhat, y = resid)) +
geom_hline(yintercept = 0, color = "red") +
scale_y_continuous(limits = c(-4,4))
fit_df5 %>%
broom::augment() %>%
mutate(yhat = predict(fit_df5),
resid = resid(fit_df5)) %>%
ggplot() +
geom_point(aes(x = yhat, y = resid)) +
geom_hline(yintercept = 0, color = "red") +
scale_y_continuous(limits = c(-4,4)) +
labs(y = "Residual", x = "Predicted Value")
source(here::here("R", "regression.R"))
theme_set(theme_light(base_size = 30))
options(htmltools.dir.version = FALSE, echo = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.width = 12, fig.height = 8)
median(t1[,2], na.rm = TRUE)
set.seed(69)
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
colnames(t1) <- c("Obs. Number", "Data Point")
t2[3,2] <- median(t1[,2], na.rm = TRUE)
colnames(t2) <- c("Obs. Number", "Data Point")
knitr::kable(list(t1, t2), caption = "Illustrated Example")
median(t1[,2], na.rm = TRUE)
install.packages("showtext")
library(tidyverse)
library(kableExtra)
library(patchwork)
library(xaringanthemer)
style_mono_accent_inverse(base_color = "#3C989E")
theme_set(theme_light(base_size = 30))
options(htmltools.dir.version = FALSE, echo = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.width = 12, fig.height = 8)
data <- readr::read_csv(here::here("data", "df.csv"))
subsets <- readr::read_csv(here::here("data", "subsets.csv"))
set.seed(69)
t1 <- cbind(1:5, round(runif(5, 200, 300), 2))
t1[3,2] <- NA
t2 <- t1
colnames(t1) <- c("Obs. Number", "Data Point")
colnames(t2) <- c("Obs. Number", "Data Point")
kable(t1, align = "c") %>%
kable_styling(position = "float_left", full_width = F, html_font = "Cambria") %>%
row_spec(3, color = "white", background = "#3C989E")
rmarkdown::render_site()
file.create("_site.yml")
